# Настройка защиты от CSRF-атак
# Защита от CSRF-атак в Flask-WTF осуществляется с помощью генерации токена,
# который добавляется к каждой форме. При отправке формы этот токен проверяется
# на сервере, чтобы убедиться, что запрос был отправлен с того же сайта.
# Для включения защиты от CSRF-атак в Flask-WTF необходимо установить секретный
# ключ приложения. Этот ключ используется для генерации токена и должен быть
# достаточно длинным и случайным.
# Рассмотрим пример настройки защиты от CSRF-атак:
from flask import Flask
from flask_wtf.csrf import CSRFProtect

app = Flask(__name__)
app.config['SECRET_KEY'] = 'c7f0a9fe796da138a935cdf5e0d73a03b202ec4bb60ad9c7626ac18b2881f2eb'
csrf = CSRFProtect(app)

"""
Генерация токена
>>> import secrets
>>> secrets.token_hex()
"""


@app.route('/')
def index():
    return 'Hello, World!'


@app.route('/form', methods=['GET', 'POST'])
@csrf.exempt
def my_form():
    ...
    return 'No CSRF protection!'


if __name__ == '__main__':
    app.run(debug=True)
# В этом примере мы используем декоратор exempt объекта csrf для отключения
# защиты от CSRF-атак для формы, которая обрабатывается в функции my_form().
# Защита от CSRF-атак является важным аспектом безопасности веб-приложений.
# Flask-WTF предоставляет простые и эффективные механизмы защиты от таких атак,
# которые можно легко настроить в приложении Flask.
